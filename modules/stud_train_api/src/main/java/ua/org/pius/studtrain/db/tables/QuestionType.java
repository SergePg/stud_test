/**
 * This class is generated by jOOQ
 */
package ua.org.pius.studtrain.db.tables;

import ua.org.pius.studtrain.db.Keys;
import ua.org.pius.studtrain.db.Public;
import ua.org.pius.studtrain.db.tables.records.QuestionTypeRecord;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.4.5" },
                            comments = "This class is generated by jOOQ")
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class QuestionType extends org.jooq.impl.TableImpl<QuestionTypeRecord> {

	private static final long serialVersionUID = 588628138;

	/**
	 * The singleton instance of <code>public.question_type</code>
	 */
	public static final QuestionType QUESTION_TYPE = new QuestionType();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<QuestionTypeRecord> getRecordType() {
		return QuestionTypeRecord.class;
	}

	/**
	 * The column <code>public.question_type.id</code>.
	 */
	public final org.jooq.TableField<QuestionTypeRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>public.question_type.name</code>.
	 */
	public final org.jooq.TableField<QuestionTypeRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(55).nullable(false), this, "");

	/**
	 * Create a <code>public.question_type</code> table reference
	 */
	public QuestionType() {
		this("question_type", null);
	}

	/**
	 * Create an aliased <code>public.question_type</code> table reference
	 */
	public QuestionType(String alias) {
		this(alias, QuestionType.QUESTION_TYPE);
	}

	private QuestionType(String alias, org.jooq.Table<QuestionTypeRecord> aliased) {
		this(alias, aliased, null);
	}

	private QuestionType(String alias, org.jooq.Table<QuestionTypeRecord> aliased, org.jooq.Field<?>[] parameters) {
		super(alias, Public.PUBLIC, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.UniqueKey<QuestionTypeRecord> getPrimaryKey() {
		return Keys.PK_QUESTION_TYPE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.UniqueKey<QuestionTypeRecord>> getKeys() {
		return java.util.Arrays.<org.jooq.UniqueKey<QuestionTypeRecord>>asList(Keys.PK_QUESTION_TYPE);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public QuestionType as(String alias) {
		return new QuestionType(alias, this);
	}

	/**
	 * Rename this table
	 */
	public QuestionType rename(String name) {
		return new QuestionType(name, null);
	}
}
