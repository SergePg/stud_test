/**
 * This class is generated by jOOQ
 */
package ua.org.pius.studtrain.db.tables;

import ua.org.pius.studtrain.db.Keys;
import ua.org.pius.studtrain.db.Public;
import ua.org.pius.studtrain.db.tables.records.QuestionRecord;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.4.5" },
                            comments = "This class is generated by jOOQ")
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Question extends org.jooq.impl.TableImpl<QuestionRecord> {

	private static final long serialVersionUID = -1147039251;

	/**
	 * The singleton instance of <code>public.question</code>
	 */
	public static final Question QUESTION = new Question();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<QuestionRecord> getRecordType() {
		return QuestionRecord.class;
	}

	/**
	 * The column <code>public.question.id</code>.
	 */
	public final org.jooq.TableField<QuestionRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>public.question.text</code>.
	 */
	public final org.jooq.TableField<QuestionRecord, String> TEXT = createField("text", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

	/**
	 * The column <code>public.question.ball</code>.
	 */
	public final org.jooq.TableField<QuestionRecord, Integer> BALL = createField("ball", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>public.question.question_type_id</code>.
	 */
	public final org.jooq.TableField<QuestionRecord, Integer> QUESTION_TYPE_ID = createField("question_type_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>public.question.theme_id</code>.
	 */
	public final org.jooq.TableField<QuestionRecord, Integer> THEME_ID = createField("theme_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * Create a <code>public.question</code> table reference
	 */
	public Question() {
		this("question", null);
	}

	/**
	 * Create an aliased <code>public.question</code> table reference
	 */
	public Question(String alias) {
		this(alias, Question.QUESTION);
	}

	private Question(String alias, org.jooq.Table<QuestionRecord> aliased) {
		this(alias, aliased, null);
	}

	private Question(String alias, org.jooq.Table<QuestionRecord> aliased, org.jooq.Field<?>[] parameters) {
		super(alias, Public.PUBLIC, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.UniqueKey<QuestionRecord> getPrimaryKey() {
		return Keys.PK_QUESTION;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.UniqueKey<QuestionRecord>> getKeys() {
		return java.util.Arrays.<org.jooq.UniqueKey<QuestionRecord>>asList(Keys.PK_QUESTION);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.ForeignKey<QuestionRecord, ?>> getReferences() {
		return java.util.Arrays.<org.jooq.ForeignKey<QuestionRecord, ?>>asList(Keys.QUESTION__FK_QUESTION_QUESTION_TYPE, Keys.QUESTION__FK_QUESTION_THEME);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Question as(String alias) {
		return new Question(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Question rename(String name) {
		return new Question(name, null);
	}
}
