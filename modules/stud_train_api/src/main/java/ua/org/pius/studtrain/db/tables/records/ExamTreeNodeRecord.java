/**
 * This class is generated by jOOQ
 */
package ua.org.pius.studtrain.db.tables.records;

import ua.org.pius.studtrain.db.tables.ExamTreeNode;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.4.5" },
                            comments = "This class is generated by jOOQ")
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ExamTreeNodeRecord extends org.jooq.impl.UpdatableRecordImpl<ExamTreeNodeRecord> implements org.jooq.Record4<Integer, Integer, Integer, Integer> {

	private static final long serialVersionUID = -1257690150;

	/**
	 * Setter for <code>public.exam_tree_node.id</code>.
	 */
	public void setId(Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>public.exam_tree_node.id</code>.
	 */
	public Integer getId() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>public.exam_tree_node.exam_id</code>.
	 */
	public void setExamId(Integer value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>public.exam_tree_node.exam_id</code>.
	 */
	public Integer getExamId() {
		return (Integer) getValue(1);
	}

	/**
	 * Setter for <code>public.exam_tree_node.theme_id</code>.
	 */
	public void setThemeId(Integer value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>public.exam_tree_node.theme_id</code>.
	 */
	public Integer getThemeId() {
		return (Integer) getValue(2);
	}

	/**
	 * Setter for <code>public.exam_tree_node.exam_rule_id</code>.
	 */
	public void setExamRuleId(Integer value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>public.exam_tree_node.exam_rule_id</code>.
	 */
	public Integer getExamRuleId() {
		return (Integer) getValue(3);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Record1<Integer> key() {
		return (org.jooq.Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record4 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row4<Integer, Integer, Integer, Integer> fieldsRow() {
		return (org.jooq.Row4) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row4<Integer, Integer, Integer, Integer> valuesRow() {
		return (org.jooq.Row4) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<Integer> field1() {
		return ExamTreeNode.EXAM_TREE_NODE.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<Integer> field2() {
		return ExamTreeNode.EXAM_TREE_NODE.EXAM_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<Integer> field3() {
		return ExamTreeNode.EXAM_TREE_NODE.THEME_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<Integer> field4() {
		return ExamTreeNode.EXAM_TREE_NODE.EXAM_RULE_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value2() {
		return getExamId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value3() {
		return getThemeId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value4() {
		return getExamRuleId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ExamTreeNodeRecord value1(Integer value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ExamTreeNodeRecord value2(Integer value) {
		setExamId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ExamTreeNodeRecord value3(Integer value) {
		setThemeId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ExamTreeNodeRecord value4(Integer value) {
		setExamRuleId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ExamTreeNodeRecord values(Integer value1, Integer value2, Integer value3, Integer value4) {
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached ExamTreeNodeRecord
	 */
	public ExamTreeNodeRecord() {
		super(ExamTreeNode.EXAM_TREE_NODE);
	}

	/**
	 * Create a detached, initialised ExamTreeNodeRecord
	 */
	public ExamTreeNodeRecord(Integer id, Integer examId, Integer themeId, Integer examRuleId) {
		super(ExamTreeNode.EXAM_TREE_NODE);

		setValue(0, id);
		setValue(1, examId);
		setValue(2, themeId);
		setValue(3, examRuleId);
	}
}
