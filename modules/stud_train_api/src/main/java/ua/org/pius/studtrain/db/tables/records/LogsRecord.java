/**
 * This class is generated by jOOQ
 */
package ua.org.pius.studtrain.db.tables.records;

import ua.org.pius.studtrain.db.tables.Logs;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.4.5" },
                            comments = "This class is generated by jOOQ")
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LogsRecord extends org.jooq.impl.UpdatableRecordImpl<LogsRecord> implements org.jooq.Record4<String, String, java.sql.Timestamp, String> {

	private static final long serialVersionUID = 789513710;

	/**
	 * Setter for <code>public.logs.username</code>.
	 */
	public void setUsername(String value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>public.logs.username</code>.
	 */
	public String getUsername() {
		return (String) getValue(0);
	}

	/**
	 * Setter for <code>public.logs.domain</code>.
	 */
	public void setDomain(String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>public.logs.domain</code>.
	 */
	public String getDomain() {
		return (String) getValue(1);
	}

	/**
	 * Setter for <code>public.logs.created_at</code>.
	 */
	public void setCreatedAt(java.sql.Timestamp value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>public.logs.created_at</code>.
	 */
	public java.sql.Timestamp getCreatedAt() {
		return (java.sql.Timestamp) getValue(2);
	}

	/**
	 * Setter for <code>public.logs.description</code>.
	 */
	public void setDescription(String value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>public.logs.description</code>.
	 */
	public String getDescription() {
		return (String) getValue(3);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Record3<String, String, java.sql.Timestamp> key() {
		return (org.jooq.Record3) super.key();
	}

	// -------------------------------------------------------------------------
	// Record4 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row4<String, String, java.sql.Timestamp, String> fieldsRow() {
		return (org.jooq.Row4) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row4<String, String, java.sql.Timestamp, String> valuesRow() {
		return (org.jooq.Row4) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<String> field1() {
		return Logs.LOGS.USERNAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<String> field2() {
		return Logs.LOGS.DOMAIN;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.sql.Timestamp> field3() {
		return Logs.LOGS.CREATED_AT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<String> field4() {
		return Logs.LOGS.DESCRIPTION;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value1() {
		return getUsername();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getDomain();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.sql.Timestamp value3() {
		return getCreatedAt();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value4() {
		return getDescription();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public LogsRecord value1(String value) {
		setUsername(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public LogsRecord value2(String value) {
		setDomain(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public LogsRecord value3(java.sql.Timestamp value) {
		setCreatedAt(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public LogsRecord value4(String value) {
		setDescription(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public LogsRecord values(String value1, String value2, java.sql.Timestamp value3, String value4) {
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached LogsRecord
	 */
	public LogsRecord() {
		super(Logs.LOGS);
	}

	/**
	 * Create a detached, initialised LogsRecord
	 */
	public LogsRecord(String username, String domain, java.sql.Timestamp createdAt, String description) {
		super(Logs.LOGS);

		setValue(0, username);
		setValue(1, domain);
		setValue(2, createdAt);
		setValue(3, description);
	}
}
