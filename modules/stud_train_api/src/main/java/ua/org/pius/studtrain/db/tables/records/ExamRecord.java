/**
 * This class is generated by jOOQ
 */
package ua.org.pius.studtrain.db.tables.records;

import ua.org.pius.studtrain.db.tables.Exam;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.4.5" },
                            comments = "This class is generated by jOOQ")
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ExamRecord extends org.jooq.impl.UpdatableRecordImpl<ExamRecord> implements org.jooq.Record11<Integer, Integer, java.sql.Timestamp, java.sql.Timestamp, java.sql.Timestamp, Integer, String, String, String, Integer, Integer> {

	private static final long serialVersionUID = 1348215162;

	/**
	 * Setter for <code>public.exam.id</code>.
	 */
	public void setId(Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>public.exam.id</code>.
	 */
	public Integer getId() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>public.exam.type</code>.
	 */
	public void setType(Integer value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>public.exam.type</code>.
	 */
	public Integer getType() {
		return (Integer) getValue(1);
	}

	/**
	 * Setter for <code>public.exam.time_start</code>.
	 */
	public void setTimeStart(java.sql.Timestamp value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>public.exam.time_start</code>.
	 */
	public java.sql.Timestamp getTimeStart() {
		return (java.sql.Timestamp) getValue(2);
	}

	/**
	 * Setter for <code>public.exam.time_end</code>.
	 */
	public void setTimeEnd(java.sql.Timestamp value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>public.exam.time_end</code>.
	 */
	public java.sql.Timestamp getTimeEnd() {
		return (java.sql.Timestamp) getValue(3);
	}

	/**
	 * Setter for <code>public.exam.time_limit</code>.
	 */
	public void setTimeLimit(java.sql.Timestamp value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>public.exam.time_limit</code>.
	 */
	public java.sql.Timestamp getTimeLimit() {
		return (java.sql.Timestamp) getValue(4);
	}

	/**
	 * Setter for <code>public.exam.edu_group_course_id</code>.
	 */
	public void setEduGroupCourseId(Integer value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>public.exam.edu_group_course_id</code>.
	 */
	public Integer getEduGroupCourseId() {
		return (Integer) getValue(5);
	}

	/**
	 * Setter for <code>public.exam.examenator_name</code>.
	 */
	public void setExamenatorName(String value) {
		setValue(6, value);
	}

	/**
	 * Getter for <code>public.exam.examenator_name</code>.
	 */
	public String getExamenatorName() {
		return (String) getValue(6);
	}

	/**
	 * Setter for <code>public.exam.name</code>.
	 */
	public void setName(String value) {
		setValue(7, value);
	}

	/**
	 * Getter for <code>public.exam.name</code>.
	 */
	public String getName() {
		return (String) getValue(7);
	}

	/**
	 * Setter for <code>public.exam.description</code>.
	 */
	public void setDescription(String value) {
		setValue(8, value);
	}

	/**
	 * Getter for <code>public.exam.description</code>.
	 */
	public String getDescription() {
		return (String) getValue(8);
	}

	/**
	 * Setter for <code>public.exam.ball</code>.
	 */
	public void setBall(Integer value) {
		setValue(9, value);
	}

	/**
	 * Getter for <code>public.exam.ball</code>.
	 */
	public Integer getBall() {
		return (Integer) getValue(9);
	}

	/**
	 * Setter for <code>public.exam.min_ball</code>.
	 */
	public void setMinBall(Integer value) {
		setValue(10, value);
	}

	/**
	 * Getter for <code>public.exam.min_ball</code>.
	 */
	public Integer getMinBall() {
		return (Integer) getValue(10);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Record1<Integer> key() {
		return (org.jooq.Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record11 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row11<Integer, Integer, java.sql.Timestamp, java.sql.Timestamp, java.sql.Timestamp, Integer, String, String, String, Integer, Integer> fieldsRow() {
		return (org.jooq.Row11) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row11<Integer, Integer, java.sql.Timestamp, java.sql.Timestamp, java.sql.Timestamp, Integer, String, String, String, Integer, Integer> valuesRow() {
		return (org.jooq.Row11) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<Integer> field1() {
		return Exam.EXAM.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<Integer> field2() {
		return Exam.EXAM.TYPE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.sql.Timestamp> field3() {
		return Exam.EXAM.TIME_START;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.sql.Timestamp> field4() {
		return Exam.EXAM.TIME_END;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.sql.Timestamp> field5() {
		return Exam.EXAM.TIME_LIMIT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<Integer> field6() {
		return Exam.EXAM.EDU_GROUP_COURSE_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<String> field7() {
		return Exam.EXAM.EXAMENATOR_NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<String> field8() {
		return Exam.EXAM.NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<String> field9() {
		return Exam.EXAM.DESCRIPTION;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<Integer> field10() {
		return Exam.EXAM.BALL;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<Integer> field11() {
		return Exam.EXAM.MIN_BALL;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value2() {
		return getType();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.sql.Timestamp value3() {
		return getTimeStart();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.sql.Timestamp value4() {
		return getTimeEnd();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.sql.Timestamp value5() {
		return getTimeLimit();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value6() {
		return getEduGroupCourseId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value7() {
		return getExamenatorName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value8() {
		return getName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value9() {
		return getDescription();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value10() {
		return getBall();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value11() {
		return getMinBall();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ExamRecord value1(Integer value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ExamRecord value2(Integer value) {
		setType(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ExamRecord value3(java.sql.Timestamp value) {
		setTimeStart(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ExamRecord value4(java.sql.Timestamp value) {
		setTimeEnd(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ExamRecord value5(java.sql.Timestamp value) {
		setTimeLimit(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ExamRecord value6(Integer value) {
		setEduGroupCourseId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ExamRecord value7(String value) {
		setExamenatorName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ExamRecord value8(String value) {
		setName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ExamRecord value9(String value) {
		setDescription(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ExamRecord value10(Integer value) {
		setBall(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ExamRecord value11(Integer value) {
		setMinBall(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ExamRecord values(Integer value1, Integer value2, java.sql.Timestamp value3, java.sql.Timestamp value4, java.sql.Timestamp value5, Integer value6, String value7, String value8, String value9, Integer value10, Integer value11) {
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached ExamRecord
	 */
	public ExamRecord() {
		super(Exam.EXAM);
	}

	/**
	 * Create a detached, initialised ExamRecord
	 */
	public ExamRecord(Integer id, Integer type, java.sql.Timestamp timeStart, java.sql.Timestamp timeEnd, java.sql.Timestamp timeLimit, Integer eduGroupCourseId, String examenatorName, String name, String description, Integer ball, Integer minBall) {
		super(Exam.EXAM);

		setValue(0, id);
		setValue(1, type);
		setValue(2, timeStart);
		setValue(3, timeEnd);
		setValue(4, timeLimit);
		setValue(5, eduGroupCourseId);
		setValue(6, examenatorName);
		setValue(7, name);
		setValue(8, description);
		setValue(9, ball);
		setValue(10, minBall);
	}
}
