/**
 * This class is generated by jOOQ
 */
package ua.org.pius.studtrain.db.tables;

import ua.org.pius.studtrain.db.Keys;
import ua.org.pius.studtrain.db.Public;
import ua.org.pius.studtrain.db.tables.records.ShadowRecord;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.4.5" },
                            comments = "This class is generated by jOOQ")
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Shadow extends org.jooq.impl.TableImpl<ShadowRecord> {

	private static final long serialVersionUID = -1391335832;

	/**
	 * The singleton instance of <code>public.shadow</code>
	 */
	public static final Shadow SHADOW = new Shadow();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<ShadowRecord> getRecordType() {
		return ShadowRecord.class;
	}

	/**
	 * The column <code>public.shadow.username</code>.
	 */
	public final org.jooq.TableField<ShadowRecord, String> USERNAME = createField("username", org.jooq.impl.SQLDataType.VARCHAR.length(30).nullable(false), this, "");

	/**
	 * The column <code>public.shadow.password</code>.
	 */
	public final org.jooq.TableField<ShadowRecord, String> PASSWORD = createField("password", org.jooq.impl.SQLDataType.VARCHAR.length(512).nullable(false), this, "");

	/**
	 * Create a <code>public.shadow</code> table reference
	 */
	public Shadow() {
		this("shadow", null);
	}

	/**
	 * Create an aliased <code>public.shadow</code> table reference
	 */
	public Shadow(String alias) {
		this(alias, Shadow.SHADOW);
	}

	private Shadow(String alias, org.jooq.Table<ShadowRecord> aliased) {
		this(alias, aliased, null);
	}

	private Shadow(String alias, org.jooq.Table<ShadowRecord> aliased, org.jooq.Field<?>[] parameters) {
		super(alias, Public.PUBLIC, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.UniqueKey<ShadowRecord> getPrimaryKey() {
		return Keys.PK_SHADOW;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.UniqueKey<ShadowRecord>> getKeys() {
		return java.util.Arrays.<org.jooq.UniqueKey<ShadowRecord>>asList(Keys.PK_SHADOW);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.ForeignKey<ShadowRecord, ?>> getReferences() {
		return java.util.Arrays.<org.jooq.ForeignKey<ShadowRecord, ?>>asList(Keys.SHADOW__FK_SHADOW_USERS);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Shadow as(String alias) {
		return new Shadow(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Shadow rename(String name) {
		return new Shadow(name, null);
	}
}
