/**
 * This class is generated by jOOQ
 */
package ua.org.pius.studtrain.db.tables;

import ua.org.pius.studtrain.db.Keys;
import ua.org.pius.studtrain.db.Public;
import ua.org.pius.studtrain.db.tables.records.ExaminationTicketRecord;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.4.5" },
                            comments = "This class is generated by jOOQ")
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ExaminationTicket extends org.jooq.impl.TableImpl<ExaminationTicketRecord> {

	private static final long serialVersionUID = 1135178429;

	/**
	 * The singleton instance of <code>public.examination_ticket</code>
	 */
	public static final ExaminationTicket EXAMINATION_TICKET = new ExaminationTicket();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<ExaminationTicketRecord> getRecordType() {
		return ExaminationTicketRecord.class;
	}

	/**
	 * The column <code>public.examination_ticket.id</code>.
	 */
	public final org.jooq.TableField<ExaminationTicketRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>public.examination_ticket.exam_id</code>.
	 */
	public final org.jooq.TableField<ExaminationTicketRecord, Integer> EXAM_ID = createField("exam_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>public.examination_ticket.number</code>.
	 */
	public final org.jooq.TableField<ExaminationTicketRecord, Integer> NUMBER = createField("number", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * Create a <code>public.examination_ticket</code> table reference
	 */
	public ExaminationTicket() {
		this("examination_ticket", null);
	}

	/**
	 * Create an aliased <code>public.examination_ticket</code> table reference
	 */
	public ExaminationTicket(String alias) {
		this(alias, ExaminationTicket.EXAMINATION_TICKET);
	}

	private ExaminationTicket(String alias, org.jooq.Table<ExaminationTicketRecord> aliased) {
		this(alias, aliased, null);
	}

	private ExaminationTicket(String alias, org.jooq.Table<ExaminationTicketRecord> aliased, org.jooq.Field<?>[] parameters) {
		super(alias, Public.PUBLIC, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.UniqueKey<ExaminationTicketRecord> getPrimaryKey() {
		return Keys.PK_EXAMINATION_TICKET;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.UniqueKey<ExaminationTicketRecord>> getKeys() {
		return java.util.Arrays.<org.jooq.UniqueKey<ExaminationTicketRecord>>asList(Keys.PK_EXAMINATION_TICKET);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.ForeignKey<ExaminationTicketRecord, ?>> getReferences() {
		return java.util.Arrays.<org.jooq.ForeignKey<ExaminationTicketRecord, ?>>asList(Keys.EXAMINATION_TICKET__FK_EXAMINATION_TICKET_EXAM);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ExaminationTicket as(String alias) {
		return new ExaminationTicket(alias, this);
	}

	/**
	 * Rename this table
	 */
	public ExaminationTicket rename(String name) {
		return new ExaminationTicket(name, null);
	}
}
