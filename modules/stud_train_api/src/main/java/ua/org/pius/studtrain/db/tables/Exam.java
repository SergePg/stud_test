/**
 * This class is generated by jOOQ
 */
package ua.org.pius.studtrain.db.tables;

import ua.org.pius.studtrain.db.Keys;
import ua.org.pius.studtrain.db.Public;
import ua.org.pius.studtrain.db.tables.records.ExamRecord;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.4.5" },
                            comments = "This class is generated by jOOQ")
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Exam extends org.jooq.impl.TableImpl<ExamRecord> {

	private static final long serialVersionUID = 2050499379;

	/**
	 * The singleton instance of <code>public.exam</code>
	 */
	public static final Exam EXAM = new Exam();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<ExamRecord> getRecordType() {
		return ExamRecord.class;
	}

	/**
	 * The column <code>public.exam.id</code>.
	 */
	public final org.jooq.TableField<ExamRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>public.exam.type</code>.
	 */
	public final org.jooq.TableField<ExamRecord, Integer> TYPE = createField("type", org.jooq.impl.SQLDataType.INTEGER.defaulted(true), this, "");

	/**
	 * The column <code>public.exam.time_start</code>.
	 */
	public final org.jooq.TableField<ExamRecord, java.sql.Timestamp> TIME_START = createField("time_start", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

	/**
	 * The column <code>public.exam.time_end</code>.
	 */
	public final org.jooq.TableField<ExamRecord, java.sql.Timestamp> TIME_END = createField("time_end", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

	/**
	 * The column <code>public.exam.time_limit</code>.
	 */
	public final org.jooq.TableField<ExamRecord, java.sql.Timestamp> TIME_LIMIT = createField("time_limit", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

	/**
	 * The column <code>public.exam.edu_group_course_id</code>.
	 */
	public final org.jooq.TableField<ExamRecord, Integer> EDU_GROUP_COURSE_ID = createField("edu_group_course_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>public.exam.examenator_name</code>.
	 */
	public final org.jooq.TableField<ExamRecord, String> EXAMENATOR_NAME = createField("examenator_name", org.jooq.impl.SQLDataType.VARCHAR.length(30).nullable(false), this, "");

	/**
	 * The column <code>public.exam.name</code>.
	 */
	public final org.jooq.TableField<ExamRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(1024).nullable(false), this, "");

	/**
	 * The column <code>public.exam.description</code>.
	 */
	public final org.jooq.TableField<ExamRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.VARCHAR.length(2048), this, "");

	/**
	 * The column <code>public.exam.ball</code>.
	 */
	public final org.jooq.TableField<ExamRecord, Integer> BALL = createField("ball", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>public.exam.min_ball</code>.
	 */
	public final org.jooq.TableField<ExamRecord, Integer> MIN_BALL = createField("min_ball", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * Create a <code>public.exam</code> table reference
	 */
	public Exam() {
		this("exam", null);
	}

	/**
	 * Create an aliased <code>public.exam</code> table reference
	 */
	public Exam(String alias) {
		this(alias, Exam.EXAM);
	}

	private Exam(String alias, org.jooq.Table<ExamRecord> aliased) {
		this(alias, aliased, null);
	}

	private Exam(String alias, org.jooq.Table<ExamRecord> aliased, org.jooq.Field<?>[] parameters) {
		super(alias, Public.PUBLIC, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.UniqueKey<ExamRecord> getPrimaryKey() {
		return Keys.PK_EXAM;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.UniqueKey<ExamRecord>> getKeys() {
		return java.util.Arrays.<org.jooq.UniqueKey<ExamRecord>>asList(Keys.PK_EXAM);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.ForeignKey<ExamRecord, ?>> getReferences() {
		return java.util.Arrays.<org.jooq.ForeignKey<ExamRecord, ?>>asList(Keys.EXAM__FK_EXAM_EDU_GROUP_COURSE, Keys.EXAM__FK_EXAM_USERS);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Exam as(String alias) {
		return new Exam(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Exam rename(String name) {
		return new Exam(name, null);
	}
}
