/**
 * This class is generated by jOOQ
 */
package ua.org.pius.studtrain.db.tables.records;

import ua.org.pius.studtrain.db.tables.Question;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.4.5" },
                            comments = "This class is generated by jOOQ")
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class QuestionRecord extends org.jooq.impl.UpdatableRecordImpl<QuestionRecord> implements org.jooq.Record5<Integer, String, Integer, Integer, Integer> {

	private static final long serialVersionUID = -560864702;

	/**
	 * Setter for <code>public.question.id</code>.
	 */
	public void setId(Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>public.question.id</code>.
	 */
	public Integer getId() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>public.question.text</code>.
	 */
	public void setText(String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>public.question.text</code>.
	 */
	public String getText() {
		return (String) getValue(1);
	}

	/**
	 * Setter for <code>public.question.ball</code>.
	 */
	public void setBall(Integer value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>public.question.ball</code>.
	 */
	public Integer getBall() {
		return (Integer) getValue(2);
	}

	/**
	 * Setter for <code>public.question.question_type_id</code>.
	 */
	public void setQuestionTypeId(Integer value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>public.question.question_type_id</code>.
	 */
	public Integer getQuestionTypeId() {
		return (Integer) getValue(3);
	}

	/**
	 * Setter for <code>public.question.theme_id</code>.
	 */
	public void setThemeId(Integer value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>public.question.theme_id</code>.
	 */
	public Integer getThemeId() {
		return (Integer) getValue(4);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Record1<Integer> key() {
		return (org.jooq.Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record5 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row5<Integer, String, Integer, Integer, Integer> fieldsRow() {
		return (org.jooq.Row5) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row5<Integer, String, Integer, Integer, Integer> valuesRow() {
		return (org.jooq.Row5) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<Integer> field1() {
		return Question.QUESTION.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<String> field2() {
		return Question.QUESTION.TEXT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<Integer> field3() {
		return Question.QUESTION.BALL;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<Integer> field4() {
		return Question.QUESTION.QUESTION_TYPE_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<Integer> field5() {
		return Question.QUESTION.THEME_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getText();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value3() {
		return getBall();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value4() {
		return getQuestionTypeId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value5() {
		return getThemeId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public QuestionRecord value1(Integer value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public QuestionRecord value2(String value) {
		setText(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public QuestionRecord value3(Integer value) {
		setBall(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public QuestionRecord value4(Integer value) {
		setQuestionTypeId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public QuestionRecord value5(Integer value) {
		setThemeId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public QuestionRecord values(Integer value1, String value2, Integer value3, Integer value4, Integer value5) {
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached QuestionRecord
	 */
	public QuestionRecord() {
		super(Question.QUESTION);
	}

	/**
	 * Create a detached, initialised QuestionRecord
	 */
	public QuestionRecord(Integer id, String text, Integer ball, Integer questionTypeId, Integer themeId) {
		super(Question.QUESTION);

		setValue(0, id);
		setValue(1, text);
		setValue(2, ball);
		setValue(3, questionTypeId);
		setValue(4, themeId);
	}
}
