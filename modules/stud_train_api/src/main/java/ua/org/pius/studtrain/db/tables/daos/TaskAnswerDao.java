/**
 * This class is generated by jOOQ
 */
package ua.org.pius.studtrain.db.tables.daos;

import ua.org.pius.studtrain.db.tables.TaskAnswer;
import ua.org.pius.studtrain.db.tables.records.TaskAnswerRecord;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.4.5" },
                            comments = "This class is generated by jOOQ")
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TaskAnswerDao extends org.jooq.impl.DAOImpl<TaskAnswerRecord, ua.org.pius.studtrain.db.tables.pojos.TaskAnswer, Integer> {

	/**
	 * Create a new TaskAnswerDao without any configuration
	 */
	public TaskAnswerDao() {
		super(TaskAnswer.TASK_ANSWER, ua.org.pius.studtrain.db.tables.pojos.TaskAnswer.class);
	}

	/**
	 * Create a new TaskAnswerDao with an attached configuration
	 */
	public TaskAnswerDao(org.jooq.Configuration configuration) {
		super(TaskAnswer.TASK_ANSWER, ua.org.pius.studtrain.db.tables.pojos.TaskAnswer.class, configuration);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected Integer getId(ua.org.pius.studtrain.db.tables.pojos.TaskAnswer object) {
		return object.getId();
	}

	/**
	 * Fetch records that have <code>id IN (values)</code>
	 */
	public java.util.List<ua.org.pius.studtrain.db.tables.pojos.TaskAnswer> fetchById(Integer... values) {
		return fetch(TaskAnswer.TASK_ANSWER.ID, values);
	}

	/**
	 * Fetch a unique record that has <code>id = value</code>
	 */
	public ua.org.pius.studtrain.db.tables.pojos.TaskAnswer fetchOneById(Integer value) {
		return fetchOne(TaskAnswer.TASK_ANSWER.ID, value);
	}

	/**
	 * Fetch records that have <code>task_questions_id IN (values)</code>
	 */
	public java.util.List<ua.org.pius.studtrain.db.tables.pojos.TaskAnswer> fetchByTaskQuestionsId(Integer... values) {
		return fetch(TaskAnswer.TASK_ANSWER.TASK_QUESTIONS_ID, values);
	}

	/**
	 * Fetch records that have <code>answer_id IN (values)</code>
	 */
	public java.util.List<ua.org.pius.studtrain.db.tables.pojos.TaskAnswer> fetchByAnswerId(Integer... values) {
		return fetch(TaskAnswer.TASK_ANSWER.ANSWER_ID, values);
	}

	/**
	 * Fetch records that have <code>text IN (values)</code>
	 */
	public java.util.List<ua.org.pius.studtrain.db.tables.pojos.TaskAnswer> fetchByText(String... values) {
		return fetch(TaskAnswer.TASK_ANSWER.TEXT, values);
	}
}
