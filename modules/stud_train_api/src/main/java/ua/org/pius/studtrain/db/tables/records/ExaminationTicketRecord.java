/**
 * This class is generated by jOOQ
 */
package ua.org.pius.studtrain.db.tables.records;

import ua.org.pius.studtrain.db.tables.ExaminationTicket;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.4.5" },
                            comments = "This class is generated by jOOQ")
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ExaminationTicketRecord extends org.jooq.impl.UpdatableRecordImpl<ExaminationTicketRecord> implements org.jooq.Record3<Integer, Integer, Integer> {

	private static final long serialVersionUID = 1887154391;

	/**
	 * Setter for <code>public.examination_ticket.id</code>.
	 */
	public void setId(Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>public.examination_ticket.id</code>.
	 */
	public Integer getId() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>public.examination_ticket.exam_id</code>.
	 */
	public void setExamId(Integer value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>public.examination_ticket.exam_id</code>.
	 */
	public Integer getExamId() {
		return (Integer) getValue(1);
	}

	/**
	 * Setter for <code>public.examination_ticket.number</code>.
	 */
	public void setNumber(Integer value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>public.examination_ticket.number</code>.
	 */
	public Integer getNumber() {
		return (Integer) getValue(2);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Record1<Integer> key() {
		return (org.jooq.Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record3 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row3<Integer, Integer, Integer> fieldsRow() {
		return (org.jooq.Row3) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row3<Integer, Integer, Integer> valuesRow() {
		return (org.jooq.Row3) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<Integer> field1() {
		return ExaminationTicket.EXAMINATION_TICKET.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<Integer> field2() {
		return ExaminationTicket.EXAMINATION_TICKET.EXAM_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<Integer> field3() {
		return ExaminationTicket.EXAMINATION_TICKET.NUMBER;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value2() {
		return getExamId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value3() {
		return getNumber();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ExaminationTicketRecord value1(Integer value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ExaminationTicketRecord value2(Integer value) {
		setExamId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ExaminationTicketRecord value3(Integer value) {
		setNumber(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ExaminationTicketRecord values(Integer value1, Integer value2, Integer value3) {
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached ExaminationTicketRecord
	 */
	public ExaminationTicketRecord() {
		super(ExaminationTicket.EXAMINATION_TICKET);
	}

	/**
	 * Create a detached, initialised ExaminationTicketRecord
	 */
	public ExaminationTicketRecord(Integer id, Integer examId, Integer number) {
		super(ExaminationTicket.EXAMINATION_TICKET);

		setValue(0, id);
		setValue(1, examId);
		setValue(2, number);
	}
}
