/**
 * This class is generated by jOOQ
 */
package ua.org.pius.studtrain.db.tables;

import ua.org.pius.studtrain.db.Keys;
import ua.org.pius.studtrain.db.Public;
import ua.org.pius.studtrain.db.tables.records.TaskAnswerRecord;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.4.5" },
                            comments = "This class is generated by jOOQ")
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TaskAnswer extends org.jooq.impl.TableImpl<TaskAnswerRecord> {

	private static final long serialVersionUID = -1172911567;

	/**
	 * The singleton instance of <code>public.task_answer</code>
	 */
	public static final TaskAnswer TASK_ANSWER = new TaskAnswer();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<TaskAnswerRecord> getRecordType() {
		return TaskAnswerRecord.class;
	}

	/**
	 * The column <code>public.task_answer.id</code>.
	 */
	public final org.jooq.TableField<TaskAnswerRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>public.task_answer.task_questions_id</code>.
	 */
	public final org.jooq.TableField<TaskAnswerRecord, Integer> TASK_QUESTIONS_ID = createField("task_questions_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>public.task_answer.answer_id</code>.
	 */
	public final org.jooq.TableField<TaskAnswerRecord, Integer> ANSWER_ID = createField("answer_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>public.task_answer.text</code>.
	 */
	public final org.jooq.TableField<TaskAnswerRecord, String> TEXT = createField("text", org.jooq.impl.SQLDataType.VARCHAR.length(1024), this, "");

	/**
	 * Create a <code>public.task_answer</code> table reference
	 */
	public TaskAnswer() {
		this("task_answer", null);
	}

	/**
	 * Create an aliased <code>public.task_answer</code> table reference
	 */
	public TaskAnswer(String alias) {
		this(alias, TaskAnswer.TASK_ANSWER);
	}

	private TaskAnswer(String alias, org.jooq.Table<TaskAnswerRecord> aliased) {
		this(alias, aliased, null);
	}

	private TaskAnswer(String alias, org.jooq.Table<TaskAnswerRecord> aliased, org.jooq.Field<?>[] parameters) {
		super(alias, Public.PUBLIC, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.UniqueKey<TaskAnswerRecord> getPrimaryKey() {
		return Keys.PK_TASK_ANSWER;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.UniqueKey<TaskAnswerRecord>> getKeys() {
		return java.util.Arrays.<org.jooq.UniqueKey<TaskAnswerRecord>>asList(Keys.PK_TASK_ANSWER);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.ForeignKey<TaskAnswerRecord, ?>> getReferences() {
		return java.util.Arrays.<org.jooq.ForeignKey<TaskAnswerRecord, ?>>asList(Keys.TASK_ANSWER__FK_TASK_ANSWER_TASK_QUESTIONS, Keys.TASK_ANSWER__FK_TASK_ANSWER_ANSWER);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TaskAnswer as(String alias) {
		return new TaskAnswer(alias, this);
	}

	/**
	 * Rename this table
	 */
	public TaskAnswer rename(String name) {
		return new TaskAnswer(name, null);
	}
}
