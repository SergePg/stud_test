/**
 * This class is generated by jOOQ
 */
package ua.org.pius.studtrain.db.tables.daos;

import ua.org.pius.studtrain.db.tables.QuestionType;
import ua.org.pius.studtrain.db.tables.records.QuestionTypeRecord;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.4.5" },
                            comments = "This class is generated by jOOQ")
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class QuestionTypeDao extends org.jooq.impl.DAOImpl<QuestionTypeRecord, ua.org.pius.studtrain.db.tables.pojos.QuestionType, Integer> {

	/**
	 * Create a new QuestionTypeDao without any configuration
	 */
	public QuestionTypeDao() {
		super(QuestionType.QUESTION_TYPE, ua.org.pius.studtrain.db.tables.pojos.QuestionType.class);
	}

	/**
	 * Create a new QuestionTypeDao with an attached configuration
	 */
	public QuestionTypeDao(org.jooq.Configuration configuration) {
		super(QuestionType.QUESTION_TYPE, ua.org.pius.studtrain.db.tables.pojos.QuestionType.class, configuration);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected Integer getId(ua.org.pius.studtrain.db.tables.pojos.QuestionType object) {
		return object.getId();
	}

	/**
	 * Fetch records that have <code>id IN (values)</code>
	 */
	public java.util.List<ua.org.pius.studtrain.db.tables.pojos.QuestionType> fetchById(Integer... values) {
		return fetch(QuestionType.QUESTION_TYPE.ID, values);
	}

	/**
	 * Fetch a unique record that has <code>id = value</code>
	 */
	public ua.org.pius.studtrain.db.tables.pojos.QuestionType fetchOneById(Integer value) {
		return fetchOne(QuestionType.QUESTION_TYPE.ID, value);
	}

	/**
	 * Fetch records that have <code>name IN (values)</code>
	 */
	public java.util.List<ua.org.pius.studtrain.db.tables.pojos.QuestionType> fetchByName(String... values) {
		return fetch(QuestionType.QUESTION_TYPE.NAME, values);
	}
}
