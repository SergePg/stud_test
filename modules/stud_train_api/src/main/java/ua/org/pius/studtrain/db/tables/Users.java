/**
 * This class is generated by jOOQ
 */
package ua.org.pius.studtrain.db.tables;

import ua.org.pius.studtrain.db.Keys;
import ua.org.pius.studtrain.db.Public;
import ua.org.pius.studtrain.db.tables.records.UsersRecord;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.4.5" },
                            comments = "This class is generated by jOOQ")
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Users extends org.jooq.impl.TableImpl<UsersRecord> {

	private static final long serialVersionUID = -1834769164;

	/**
	 * The singleton instance of <code>public.users</code>
	 */
	public static final Users USERS = new Users();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<UsersRecord> getRecordType() {
		return UsersRecord.class;
	}

	/**
	 * The column <code>public.users.username</code>.
	 */
	public final org.jooq.TableField<UsersRecord, String> USERNAME = createField("username", org.jooq.impl.SQLDataType.VARCHAR.length(30).nullable(false), this, "");

	/**
	 * The column <code>public.users.created_at</code>.
	 */
	public final org.jooq.TableField<UsersRecord, java.sql.Timestamp> CREATED_AT = createField("created_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>public.users.activation</code>.
	 */
	public final org.jooq.TableField<UsersRecord, String> ACTIVATION = createField("activation", org.jooq.impl.SQLDataType.VARCHAR.length(1).nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>public.users.first_name</code>.
	 */
	public final org.jooq.TableField<UsersRecord, String> FIRST_NAME = createField("first_name", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

	/**
	 * The column <code>public.users.last_name</code>.
	 */
	public final org.jooq.TableField<UsersRecord, String> LAST_NAME = createField("last_name", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

	/**
	 * The column <code>public.users.gender</code>.
	 */
	public final org.jooq.TableField<UsersRecord, String> GENDER = createField("gender", org.jooq.impl.SQLDataType.VARCHAR.length(1), this, "");

	/**
	 * The column <code>public.users.email</code>.
	 */
	public final org.jooq.TableField<UsersRecord, String> EMAIL = createField("email", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

	/**
	 * The column <code>public.users.phone</code>.
	 */
	public final org.jooq.TableField<UsersRecord, String> PHONE = createField("phone", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

	/**
	 * The column <code>public.users.activation_key</code>.
	 */
	public final org.jooq.TableField<UsersRecord, String> ACTIVATION_KEY = createField("activation_key", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

	/**
	 * The column <code>public.users.params</code>.
	 */
	public final org.jooq.TableField<UsersRecord, String> PARAMS = createField("params", org.jooq.impl.SQLDataType.VARCHAR.length(4096), this, "");

	/**
	 * Create a <code>public.users</code> table reference
	 */
	public Users() {
		this("users", null);
	}

	/**
	 * Create an aliased <code>public.users</code> table reference
	 */
	public Users(String alias) {
		this(alias, Users.USERS);
	}

	private Users(String alias, org.jooq.Table<UsersRecord> aliased) {
		this(alias, aliased, null);
	}

	private Users(String alias, org.jooq.Table<UsersRecord> aliased, org.jooq.Field<?>[] parameters) {
		super(alias, Public.PUBLIC, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.UniqueKey<UsersRecord> getPrimaryKey() {
		return Keys.PK_USERS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.UniqueKey<UsersRecord>> getKeys() {
		return java.util.Arrays.<org.jooq.UniqueKey<UsersRecord>>asList(Keys.PK_USERS);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Users as(String alias) {
		return new Users(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Users rename(String name) {
		return new Users(name, null);
	}
}
