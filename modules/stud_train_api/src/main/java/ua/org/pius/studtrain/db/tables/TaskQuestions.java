/**
 * This class is generated by jOOQ
 */
package ua.org.pius.studtrain.db.tables;

import ua.org.pius.studtrain.db.Keys;
import ua.org.pius.studtrain.db.Public;
import ua.org.pius.studtrain.db.tables.records.TaskQuestionsRecord;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.4.5" },
                            comments = "This class is generated by jOOQ")
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TaskQuestions extends org.jooq.impl.TableImpl<TaskQuestionsRecord> {

	private static final long serialVersionUID = 409055191;

	/**
	 * The singleton instance of <code>public.task_questions</code>
	 */
	public static final TaskQuestions TASK_QUESTIONS = new TaskQuestions();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<TaskQuestionsRecord> getRecordType() {
		return TaskQuestionsRecord.class;
	}

	/**
	 * The column <code>public.task_questions.id</code>.
	 */
	public final org.jooq.TableField<TaskQuestionsRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>public.task_questions.student_task_id</code>.
	 */
	public final org.jooq.TableField<TaskQuestionsRecord, Integer> STUDENT_TASK_ID = createField("student_task_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>public.task_questions.question_id</code>.
	 */
	public final org.jooq.TableField<TaskQuestionsRecord, Integer> QUESTION_ID = createField("question_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * Create a <code>public.task_questions</code> table reference
	 */
	public TaskQuestions() {
		this("task_questions", null);
	}

	/**
	 * Create an aliased <code>public.task_questions</code> table reference
	 */
	public TaskQuestions(String alias) {
		this(alias, TaskQuestions.TASK_QUESTIONS);
	}

	private TaskQuestions(String alias, org.jooq.Table<TaskQuestionsRecord> aliased) {
		this(alias, aliased, null);
	}

	private TaskQuestions(String alias, org.jooq.Table<TaskQuestionsRecord> aliased, org.jooq.Field<?>[] parameters) {
		super(alias, Public.PUBLIC, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.UniqueKey<TaskQuestionsRecord> getPrimaryKey() {
		return Keys.PK_TASK_QUESTIONS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.UniqueKey<TaskQuestionsRecord>> getKeys() {
		return java.util.Arrays.<org.jooq.UniqueKey<TaskQuestionsRecord>>asList(Keys.PK_TASK_QUESTIONS);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.ForeignKey<TaskQuestionsRecord, ?>> getReferences() {
		return java.util.Arrays.<org.jooq.ForeignKey<TaskQuestionsRecord, ?>>asList(Keys.TASK_QUESTIONS__FK_TASK_QUESTIONS_STUDENT_TASK, Keys.TASK_QUESTIONS__FK_TASK_QUESTIONS_QUESTION);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TaskQuestions as(String alias) {
		return new TaskQuestions(alias, this);
	}

	/**
	 * Rename this table
	 */
	public TaskQuestions rename(String name) {
		return new TaskQuestions(name, null);
	}
}
